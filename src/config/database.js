/**
 * üóÑÔ∏è CONFIGURACI√ìN DE BASE DE DATOS
 * 
 * Este archivo maneja la conexi√≥n a MongoDB usando Mongoose.
 * 
 * Funcionalidades:
 * - Conexi√≥n a MongoDB Atlas o local
 * - Configuraci√≥n de opciones de conexi√≥n
 * - Manejo de errores de conexi√≥n
 * - Logs informativos de estado
 */

const mongoose = require("mongoose");
const configuracion = require("./config");

/**
 * Conecta a la base de datos MongoDB
 * @returns {Promise<void>}
 */
const conectarDB = async () => {
  try {
    console.log("üîÑ Conectando a MongoDB...");
    
    // Opciones de conexi√≥n para optimizar la conexi√≥n
    const opciones = {
      // Usa el nuevo parser de URL de MongoDB
      useNewUrlParser: true,
      useUnifiedTopology: true,
      
      // Configuraciones para producci√≥n
      maxPoolSize: 10, // Mantener hasta 10 conexiones socket
      serverSelectionTimeoutMS: 5000, // Mantener intentando enviar operaciones por 5 segundos
      socketTimeoutMS: 45000, // Cerrar sockets despu√©s de 45 segundos de inactividad
      bufferMaxEntries: 0, // Deshabilitar el almacenamiento en buffer de mongoose
    };

    // Realizar la conexi√≥n
    await mongoose.connect(configuracion.mongodb.uri, opciones);
    
    console.log("üçÉ MongoDB conectado exitosamente");
    console.log(`üìç Base de datos: ${mongoose.connection.name}`);
    console.log(`üè† Host: ${mongoose.connection.host}`);
    
  } catch (error) {
    console.error("‚ùå Error conectando a MongoDB:");
    console.error(`   Mensaje: ${error.message}`);
    console.error(`   C√≥digo: ${error.code || 'N/A'}`);
    
    // En desarrollo, mostrar m√°s detalles del error
    if (configuracion.servidor.entorno === 'development') {
      console.error("   Stack completo:", error.stack);
    }
    
    // Salir del proceso si no se puede conectar a la base de datos
    process.exit(1);
  }
};

/**
 * Eventos de conexi√≥n de MongoDB
 */
mongoose.connection.on('connected', () => {
  console.log('üîó Mongoose conectado a MongoDB');
});

mongoose.connection.on('error', (err) => {
  console.error('‚ùå Error de conexi√≥n MongoDB:', err);
});

mongoose.connection.on('disconnected', () => {
  console.log('‚ö†Ô∏è Mongoose desconectado de MongoDB');
});

/**
 * Manejar el cierre graceful de la aplicaci√≥n
 */
process.on('SIGINT', async () => {
  try {
    await mongoose.connection.close();
    console.log('üîå Conexi√≥n MongoDB cerrada debido a terminaci√≥n de aplicaci√≥n');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error cerrando conexi√≥n MongoDB:', error);
    process.exit(1);
  }
});

module.exports = conectarDB;